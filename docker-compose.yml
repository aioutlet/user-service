version: '3.8'

services:
  user-service:
    build: .
    container_name: user-service-docker
    restart: unless-stopped
    ports:
      - '3002:3002'
    environment:
      - NODE_ENV=development
      - PORT=3002
      - HOST=0.0.0.0
      - MONGODB_URI=mongodb://mongo-user-service:27017/user_service_dev
      - JWT_SECRET=user_service_jwt_dev_secret_123
      - JWT_EXPIRES_IN=7d
      - BCRYPT_ROUNDS=10
      - LOG_LEVEL=debug
      - CORS_ORIGIN=http://localhost:3000,http://localhost:3010
      - AUTH_SERVICE_URL=http://host.docker.internal:4000
    depends_on:
      mongo-user-service:
        condition: service_healthy
    networks:
      - user-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3002/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  mongo-user-service:
    image: mongo:latest
    container_name: user-mongo-docker
    restart: unless-stopped
    ports:
      - '27019:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=userservice
      - MONGO_INITDB_ROOT_PASSWORD=user_mongo_dev_123
      - MONGO_INITDB_DATABASE=user_service_dev
    volumes:
      - mongo-user-service-data:/data/db
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - user-network

volumes:
  mongo-user-service-data:

networks:
  user-network:
    driver: bridge
